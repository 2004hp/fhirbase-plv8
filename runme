#!/usr/bin/env python

import ql
import os
import ql.prepr
import sys
import glob


def each_file(fls,cb):
    for fl in fls:
        if os.path.isfile(fl):
            cb(fl)
        else:
            print 'Could not fild file %s' % fl

def run_tests(args):
    if not args:
        args = glob.glob('./test/*_spec.sql')

    ql.pgexec('SELECT tests.start()')
    def run(fl):
        ql.reload(fl)

    each_file(args,run)
    if ql.to_pg('SELECT tests.fail()') != 0:
        print ql.red('FAILED TESTS')
        print ql.red(ql.pgexec('SELECT * from tests.report()'))
        sys.exit(1)

def compile(args):
    def run(fl):
        f = open(fl)
        print '-- FILE: %s' % fl
        print ql.prepr.process(fl, f.read())
        f.close
    each_file(args,run)

def reload(args):
    def run(fl):
        ql.reload(fl, True)
    each_file(args,run)

def load(args):
    def run(fl):
        ql.reload(fl)
    each_file(args,run)

def itegrate(args):
    print 'TODO'

def build(args):
    print 'TODO'

def install(args):
    print 'TODO'

cmd = sys.argv[1]

commands = dict(test=run_tests, compile=compile, load=load, reload=reload)

print cmd
if cmd in commands:
    print 'run command %s' % cmd
    commands[cmd](sys.argv[2:])
else:
    print 'Unknown command %s' % cmd


