1000  - Time: 1365.644 ms

Timing is on.
 count
-------
 10000
(1 row)

Time: 5963.041 ms

Timing is on.
 count
--------
 100000
(1 row)

Time: 58025.182 ms

Timing is on.
 count
--------
 100000
(1 row)

(public.patient,"46 MB")

Time: 30553.204 ms

# with insert

Timing is on.
INSERT 0 100000
Time: 4488.318 ms



Timing is on.
INSERT 0 200000
Time: 8600.216 ms


--------------------------------------------------------

50M patients generation took 3.5 hours

Right after insert public.patient = 64 Gb
After VACUMM FULL size of table on disk remains the same.

Inserting 1000 patients with crud.create() in one SELECT took ~1900 ms
(approx 1.9 ms per patient).
Inserting single patient with crud.create() takes ~9.5 ms.

Reading 1000 patients with crud.read() in one SELECT took 1488 ms
(approx 1.5 ms per patient).
Reading single patient with crud.read() takes ~8 ms.

Updateing single patient with crud.update() takes 319 seconds.

Deleting 1000 patients with crud.delete() in one SELECT took 1665 ms
(approx 1.7 ms per patient).
Deleting single patient with crud.delete() takes ~10 ms.

Searching with 'name=John' without index takes 8098 ms (fast because
of default LIMIT)

Searching for non-existent name without index takes 43 minutes.

Indexing patient name
with indexing.index_search_param('Patient', 'name')
takes 3226 seconds (53 minutes).

Index on patient name (patient_name_name_string_idx)
takes on disk 2250 MB.

Searching for non-existent name with index takes ~200 ms.

Searching by partial match for 'name=John' with fhir.search() using index
and with many search candidates takes 4.7 s

Searching patient by partial match for 'name=John' with fhir.search()
using index and with only one search candidate takes ~198 ms.

Indexing patient identifier
indexing.index_search_param('Patient','identifier')
takes ~5.2 hours.

Indexing patient gender
indexing.index_search_param('Patient','gender')
takes ~42 minutes.

Indexing patient address
indexing.index_search_param('Patient','address')
takes ~103 minutes.

Indexing patient active
indexing.index_search_param('Patient','active')
takes ~41 minutes.

Searching for 'gender=female&_count=50000000'
with fhir.search() using index takes ~9 s

Indexing patient telecom
indexing.index_search_param('Patient','telecom')
takes ~65 minutes.

History by id for non-existent patient takes ~25 ms.

History by id for one patient takes ~25 ms.

History by all patient carsh after 66 minutes
with error (no space left on device).

---------------------------------------------------------

10K patients

Indexing patient birthDate
with indexing.index_search_param('Patient', 'birthdate')
takes 16.7 seconds (50M patients => 23 hours).

---------------------------------------------------------

1M patients (on MacBook Air):

RESULTS:
disk usage right after generation of seed data          11.251 ms
fhir.create called just one time                        12.384 ms
fhir.create called 1000 times in batch                1295.850 ms
fhir.read called just one time                           8.305 ms
fhir.read called 1000 times in batch                   395.329 ms
Updating single patient with fhir.update()             257.148 ms
fhir.delete called one time                              9.765 ms
fhir.delete called 1000 times in batch                1004.257 ms
searching for non-existent name without index        96971.049 ms
building Patient.name index                         126951.682 ms
building Patient.gender index                        98073.680 ms
building Patient.address index                      242512.825 ms
building Patient.telecom index                      154885.039 ms
building Participant.name index                          5.678 ms
building Organization.name index                        55.567 ms
building Organization.address index                      5.769 ms
building Encounter.status                           144310.344 ms
running VACUUM ANALYZE on patient table              35217.234 ms
running VACUUM ANALYZE on encounter table             7590.392 ms
running VACUUM ANALYZE on organization table            70.176 ms
running VACUUM ANALYZE on practitioner table            16.749 ms
searching for patient with unique name                  60.877 ms
searching for all Johns in database                    202.657 ms
